diff -r code/cgame/cg_local.h ../../../Quake-III-Arena-master/code/cgame/cg_local.h
648,659d647
< 	// ZNUDGE BEGIN
< 
< 	// Provide FPS data:
< 	int cpuTimePrev;
< 	int cpuTimeCurr;
< 	int cpuFrameTime;
< 
< 	// Smoothed out velocities so players don't teleport around so much.
< 	vec3_t smoothVelocities[MAX_CLIENTS];
< 
< 	// ZNUDGE END
< 
1085d1072
< 
1095,1096d1081
< 
< 
1202,1211d1186
< // ZNUDGE BEGIN
< extern	vmCvar_t		znudge;
< extern	vmCvar_t		zn_gravity;
< extern	vmCvar_t		zn_drawball;
< extern	vmCvar_t		zn_maxclips;
< extern	vmCvar_t		zn_climbheight;
< extern	vmCvar_t		zn_runningspeed;
< extern	vmCvar_t		zn_smoothweight;
< // ZNUDGE END
< 
1488,1500d1462
< 
< 
< 
< // ZNUDGE BEGIN
< //
< // cg_znudge.c
< //
< float ZN_TimeToPoint( vec3_t origin, vec3_t velocity, float gravity, vec3_t destination );
< void  ZN_PredictSimple( vec3_t origin, vec3_t velocity, float gravity, float nudge, vec3_t predicted);
< int   ZN_CheckGround( centity_t* cent, vec3_t origin, vec3_t velocity, vec3_t predictedOrigin );
< void  ZN_GetVelocity ( centity_t* cent, vec3_t velocity );
< void  ZN_PredictOrigin( centity_t* cent, float nudge, vec3_t predictedOrigin );
< // ZNUDGE END
diff -r code/cgame/cg_main.c ../../../Quake-III-Arena-master/code/cgame/cg_main.c
200,209d199
< // ZNUDGE BEGIN
< vmCvar_t	znudge;
< vmCvar_t	zn_gravity;
< vmCvar_t	zn_drawball;
< vmCvar_t	zn_maxclips;
< vmCvar_t	zn_climbheight;
< vmCvar_t	zn_runningspeed;
< vmCvar_t	zn_smoothweight;
< // ZNUDGE END
< 
327,338c317,318
< 	{ &cg_trueLightning, "cg_trueLightning", "0.0", CVAR_ARCHIVE},
< //	{ &cg_pmove_fixed, "cg_pmove_fixed", "0", CVAR_USERINFO | CVAR_ARCHIVE },
< 
< // ZNUDGE BEGIN
< 	{ &znudge, "znudge", "1", CVAR_ARCHIVE},
< 	{ &zn_gravity, "zn_gravity", "800", CVAR_ARCHIVE},
< 	{ &zn_drawball, "zn_drawball", "1", CVAR_ARCHIVE},
< 	{ &zn_maxclips, "zn_maxclips", "5", CVAR_ARCHIVE},
< 	{ &zn_climbheight, "zn_climbheight", "20", CVAR_ARCHIVE},
< 	{ &zn_runningspeed, "zn_runningspeed", "320", CVAR_ARCHIVE},
< 	{ &zn_smoothweight, "zn_smoothweight", ".2", CVAR_ARCHIVE}
< // ZNUDGE END
---
> 	{ &cg_trueLightning, "cg_trueLightning", "0.0", CVAR_ARCHIVE}
> //	{ &cg_pmove_fixed, "cg_pmove_fixed", "0", CVAR_USERINFO | CVAR_ARCHIVE }
1981,1991d1960
< 
< // ZNUDGE BEGIN
< 	{
< 		int i;
< 		for ( i = 0; i < MAX_CLIENTS; i++ ) {
< 			cg.smoothVelocities[i][0] = 0.0;
< 			cg.smoothVelocities[i][1] = 0.0;
< 			cg.smoothVelocities[i][2] = 0.0;
< 		}
< 	}
< // ZNUDGE END
diff -r code/cgame/cg_players.c ../../../Quake-III-Arena-master/code/cgame/cg_players.c
2224d2223
< // ZNUDGE BEGIN
2227,2229c2226
< CG_Player_
< 
< This is the normal CG_Player function.
---
> CG_Player
2232c2229
< void CG_Player_( centity_t *cent ) {
---
> void CG_Player( centity_t *cent ) {
2582,2645d2578
< 
< 
< 
< 
< /*
< ===============
< CG_Player
< 
< This is the new CG_Player function.
< ===============
< */
< void CG_Player( centity_t *cent ) {
< 
< 	if (znudge.integer == 0 ||
< 		cg.clientNum == cent->currentState.number ||
< 		cent->currentState.eFlags & EF_DEAD ) {
< 
< 		CG_Player_( cent );
< 	}
< 	else {
< 		vec3_t lerpOrigin;
< 		vec3_t predictedOrigin;
< 		int ping;
< 		float nudge;
< 
< 		ping = cg.snap ? cg.snap->ping : 0;
< 		nudge = (ping + cg.frametime)/1000.0;
< 
< 		if (zn_drawball.integer &&
< 			!(cent->currentState.powerups & (1 << PW_INVIS))) {
< 			refEntity_t ent;
< 			float orb_offset = 16.0;
< 
< 			memset (&ent, 0, sizeof(ent));
< 			VectorCopy( cent->lerpOrigin, ent.origin);
< 			VectorCopy( cent->lerpOrigin, ent.oldorigin);
< 			ent.origin[2] += orb_offset;
< 			ent.oldorigin[2] += orb_offset;
< 
< 			ent.reType = RT_SPRITE;
< 			ent.radius = 16;
< 			ent.rotation = 0;
< 			ent.customShader = cgs.media.plasmaBallShader;
< 			trap_R_AddRefEntityToScene( &ent );
< 		}
< 
< 		lerpOrigin[0] = cent->lerpOrigin[0];
< 		lerpOrigin[1] = cent->lerpOrigin[1];
< 		lerpOrigin[2] = cent->lerpOrigin[2];
< 
< 		ZN_PredictOrigin( cent, nudge, predictedOrigin );
< 
< 		cent->lerpOrigin[0] = predictedOrigin[0];
< 		cent->lerpOrigin[1] = predictedOrigin[1];
< 		cent->lerpOrigin[2] = predictedOrigin[2];
< 
< 		CG_Player_( cent );
< 
< 		cent->lerpOrigin[0] = lerpOrigin[0];
< 		cent->lerpOrigin[1] = lerpOrigin[1];
< 		cent->lerpOrigin[2] = lerpOrigin[2];
< 	}
< }
< // ZNUDGE END
diff -r code/cgame/cg_view.c ../../../Quake-III-Arena-master/code/cgame/cg_view.c
800,813d799
< 
< 	// ZNUDGE BEGIN
< 	// Compute FPS data.
< 
< 	cg.cpuTimePrev = cg.cpuTimeCurr;
< 	cg.cpuTimeCurr = trap_Milliseconds();
< 
< 	if ( cg.cpuTimePrev == 0)
< 		cg.cpuTimePrev = cg.cpuTimeCurr;
< 
< 	cg.cpuFrameTime = cg.cpuTimeCurr - cg.cpuTimePrev;
< 
< 	// ZNUDGE END
< 
Only in code/cgame: cg_znudge.c
