diff -r code/cgame/cg_ents.c ../../../Quake-III-Arena-master/code/cgame/cg_ents.c
410d409
< 	vec3_t origin;
420,439d418
< 	VectorCopy( cent->lerpOrigin, origin );
< 
< // ZNUDGE BEGIN
< 	if ( zn_projectiles.value ) {
< 		float nudge = ZN_GetNudge();
< 
< 		if (s1->weapon == WP_ROCKET_LAUNCHER ||
< 			s1->weapon == WP_PLASMAGUN ||
< 			s1->weapon == WP_BFG) {
< 
< 			ZN_PredictMissile( cent, nudge, origin );
< 
< 		}
< 		else if (s1->weapon == WP_GRENADE_LAUNCHER ) {
< 
< 			ZN_PredictGrenade( cent, nudge, origin );
< 
< 		}
< 	}
< // ZNUDGE END
459c438
< 		trap_R_AddLightToScene(origin, weapon->missileDlight, 
---
> 		trap_R_AddLightToScene(cent->lerpOrigin, weapon->missileDlight, 
465c444
< 		trap_R_AddLightToScene(origin, weapon->missileDlight, 
---
> 		trap_R_AddLightToScene(cent->lerpOrigin, weapon->missileDlight, 
475c454
< 		trap_S_AddLoopingSound( cent->currentState.number, origin, velocity, weapon->missileSound );
---
> 		trap_S_AddLoopingSound( cent->currentState.number, cent->lerpOrigin, velocity, weapon->missileSound );
480,481c459,460
< 	VectorCopy( origin, ent.origin);
< 	VectorCopy( origin, ent.oldorigin);
---
> 	VectorCopy( cent->lerpOrigin, ent.origin);
> 	VectorCopy( cent->lerpOrigin, ent.oldorigin);
diff -r code/cgame/cg_event.c ../../../Quake-III-Arena-master/code/cgame/cg_event.c
927,930c927
< // ZNUDGE BEGIN
< 		if (zn_serverrail.integer || clientNum != cg.clientNum )
< 			CG_RailTrail( ci, es->origin2, es->pos.trBase );
< // ZNUDGE END
---
> 		CG_RailTrail( ci, es->origin2, es->pos.trBase );
diff -r code/cgame/cg_local.h ../../../Quake-III-Arena-master/code/cgame/cg_local.h
648,664d647
< 	// ZNUDGE BEGIN
< 
< 	// Provide FPS data:
< 	int cpuTimePrev;
< 	int cpuTimeCurr;
< 	int cpuFrameTime;
< 
< 	// Smoothed out velocities so players don't teleport around so much.
< 	vec3_t smoothVelocities[MAX_CLIENTS];
< 
< 	// Detect if fire is held and next time a shot may be fired.
< 	int fire_held;
< 	int next_fire_time;
< 	int weapon_num;
< 
< 	// ZNUDGE END
< 
1090d1072
< 
1100,1101d1081
< 
< 
1207,1229d1186
< // ZNUDGE BEGIN
< extern	vmCvar_t		znudge;
< extern	vmCvar_t		zn_gravity;
< extern	vmCvar_t		zn_drawball;
< extern	vmCvar_t		zn_maxclips;
< extern	vmCvar_t		zn_climbheight;
< extern	vmCvar_t		zn_runningspeed;
< extern	vmCvar_t		zn_smoothweight;
< extern	vmCvar_t		zn_lightning;
< extern	vmCvar_t		zn_projectiles;
< extern	vmCvar_t		zn_offset;
< extern	vmCvar_t		zn_localextend;
< extern	vmCvar_t		zn_localprestep;
< extern	vmCvar_t		zn_localprojectiles;
< extern	vmCvar_t		zn_localrail;
< extern	vmCvar_t		zn_serverrail;
< extern	vmCvar_t		zn_bounce_factor;
< extern	vmCvar_t		zn_stick_speed;
< extern	vmCvar_t		zn_plane_up;
< extern	vmCvar_t		zn_step_size;
< extern	vmCvar_t		zn_grenade_shift;
< // ZNUDGE END
< 
1506,1522d1462
< 
< 
< 
< // ZNUDGE BEGIN
< //
< // cg_znudge.c
< //
< float ZN_GetNudge(void);
< float ZN_TimeToPoint( vec3_t origin, vec3_t velocity, float gravity, vec3_t destination );
< void  ZN_PredictSimple( vec3_t origin, vec3_t velocity, float gravity, float nudge, vec3_t predicted);
< int   ZN_CheckGround( centity_t* cent, vec3_t origin, vec3_t velocity, vec3_t predictedOrigin );
< void  ZN_GetVelocity ( centity_t* cent, vec3_t velocity );
< void  ZN_PredictPlayer( centity_t* cent, float nudge, vec3_t predictedOrigin );
< void  ZN_PredictMissile( centity_t* cent, float nudge, vec3_t predictedOrigin );
< void  ZN_PredictGrenade( centity_t* cent, float nudge, vec3_t predictedOrigin );
< void  ZN_CheckFireEvent(void);
< // ZNUDGE END
diff -r code/cgame/cg_main.c ../../../Quake-III-Arena-master/code/cgame/cg_main.c
200,222d199
< // ZNUDGE BEGIN
< vmCvar_t	znudge;
< vmCvar_t	zn_gravity;
< vmCvar_t	zn_drawball;
< vmCvar_t	zn_maxclips;
< vmCvar_t	zn_climbheight;
< vmCvar_t	zn_runningspeed;
< vmCvar_t	zn_smoothweight;
< vmCvar_t	zn_lightning;
< vmCvar_t	zn_projectiles;
< vmCvar_t	zn_offset;
< vmCvar_t	zn_localextend;
< vmCvar_t	zn_localprestep;
< vmCvar_t	zn_localprojectiles;
< vmCvar_t	zn_localrail;
< vmCvar_t	zn_serverrail;
< vmCvar_t	zn_bounce_factor;
< vmCvar_t	zn_stick_speed;
< vmCvar_t	zn_plane_up;
< vmCvar_t	zn_step_size;
< vmCvar_t	zn_grenade_shift;
< // ZNUDGE END
< 
340,364c317,318
< 	{ &cg_trueLightning, "cg_trueLightning", "0.0", CVAR_ARCHIVE},
< //	{ &cg_pmove_fixed, "cg_pmove_fixed", "0", CVAR_USERINFO | CVAR_ARCHIVE },
< 
< // ZNUDGE BEGIN
< 	{ &znudge, "znudge", "1", CVAR_ARCHIVE},
< 	{ &zn_gravity, "zn_gravity", "800", CVAR_ARCHIVE},
< 	{ &zn_drawball, "zn_drawball", "1", CVAR_ARCHIVE},
< 	{ &zn_maxclips, "zn_maxclips", "5", CVAR_ARCHIVE},
< 	{ &zn_climbheight, "zn_climbheight", "20", CVAR_ARCHIVE},
< 	{ &zn_runningspeed, "zn_runningspeed", "320", CVAR_ARCHIVE},
< 	{ &zn_smoothweight, "zn_smoothweight", ".2", CVAR_ARCHIVE},
< 	{ &zn_lightning, "zn_lightning", "1", CVAR_ARCHIVE},
< 	{ &zn_projectiles, "zn_projectiles", "1", CVAR_ARCHIVE},
< 	{ &zn_offset, "zn_offset", "0", CVAR_ARCHIVE},
< 	{ &zn_localextend, "zn_localextend", "50", CVAR_ARCHIVE},
< 	{ &zn_localprestep, "zn_localprestep", "50", CVAR_ARCHIVE},
< 	{ &zn_localprojectiles, "zn_localprojectiles", "1", CVAR_ARCHIVE},
< 	{ &zn_localrail, "zn_localrail", "1", CVAR_ARCHIVE},
< 	{ &zn_serverrail, "zn_serverrail", "1", CVAR_ARCHIVE},
< 	{ &zn_bounce_factor, "zn_bounce_factor", ".65", CVAR_ARCHIVE},
< 	{ &zn_stick_speed, "zn_stick_speed", "40", CVAR_ARCHIVE},
< 	{ &zn_plane_up, "zn_plane_up", ".2", CVAR_ARCHIVE},
< 	{ &zn_step_size, "zn_step_size", ".05", CVAR_ARCHIVE},
< 	{ &zn_grenade_shift, "zn_grenade_shift", ".2", CVAR_ARCHIVE}
< // ZNUDGE END
---
> 	{ &cg_trueLightning, "cg_trueLightning", "0.0", CVAR_ARCHIVE}
> //	{ &cg_pmove_fixed, "cg_pmove_fixed", "0", CVAR_USERINFO | CVAR_ARCHIVE }
2007,2021d1960
< 
< // ZNUDGE BEGIN
< 	{
< 		int i;
< 		for ( i = 0; i < MAX_CLIENTS; i++ ) {
< 			cg.smoothVelocities[i][0] = 0.0;
< 			cg.smoothVelocities[i][1] = 0.0;
< 			cg.smoothVelocities[i][2] = 0.0;
< 		}
< 
< 		cg.fire_held = 0;
< 		cg.next_fire_time = 0;
< 		cg.weapon_num = 0;
< 	}
< // ZNUDGE END
diff -r code/cgame/cg_players.c ../../../Quake-III-Arena-master/code/cgame/cg_players.c
2224d2223
< // ZNUDGE BEGIN
2227,2229c2226
< CG_Player_
< 
< This is the normal CG_Player function.
---
> CG_Player
2232c2229
< void CG_Player_( centity_t *cent ) {
---
> void CG_Player( centity_t *cent ) {
2582,2641d2578
< 
< 
< 
< 
< /*
< ===============
< CG_Player
< 
< This is the new CG_Player function.
< ===============
< */
< void CG_Player( centity_t *cent ) {
< 
< 	if (znudge.integer == 0 ||
< 		cg.clientNum == cent->currentState.number ||
< 		cent->currentState.eFlags & EF_DEAD ) {
< 
< 		CG_Player_( cent );
< 	}
< 	else {
< 		vec3_t lerpOrigin;
< 		vec3_t predictedOrigin;
< 		float nudge = ZN_GetNudge();
< 
< 		if (zn_drawball.integer &&
< 			!(cent->currentState.powerups & (1 << PW_INVIS))) {
< 			refEntity_t ent;
< 			float orb_offset = 16.0;
< 
< 			memset (&ent, 0, sizeof(ent));
< 			VectorCopy( cent->lerpOrigin, ent.origin);
< 			VectorCopy( cent->lerpOrigin, ent.oldorigin);
< 			ent.origin[2] += orb_offset;
< 			ent.oldorigin[2] += orb_offset;
< 
< 			ent.reType = RT_SPRITE;
< 			ent.radius = 16;
< 			ent.rotation = 0;
< 			ent.customShader = cgs.media.plasmaBallShader;
< 			trap_R_AddRefEntityToScene( &ent );
< 		}
< 
< 		lerpOrigin[0] = cent->lerpOrigin[0];
< 		lerpOrigin[1] = cent->lerpOrigin[1];
< 		lerpOrigin[2] = cent->lerpOrigin[2];
< 
< 		ZN_PredictPlayer( cent, nudge, predictedOrigin );
< 
< 		cent->lerpOrigin[0] = predictedOrigin[0];
< 		cent->lerpOrigin[1] = predictedOrigin[1];
< 		cent->lerpOrigin[2] = predictedOrigin[2];
< 
< 		CG_Player_( cent );
< 
< 		cent->lerpOrigin[0] = lerpOrigin[0];
< 		cent->lerpOrigin[1] = lerpOrigin[1];
< 		cent->lerpOrigin[2] = lerpOrigin[2];
< 	}
< }
< // ZNUDGE END
diff -r code/cgame/cg_view.c ../../../Quake-III-Arena-master/code/cgame/cg_view.c
800,813d799
< 
< 	// ZNUDGE BEGIN
< 	// Compute FPS data.
< 
< 	cg.cpuTimePrev = cg.cpuTimeCurr;
< 	cg.cpuTimeCurr = trap_Milliseconds();
< 
< 	if ( cg.cpuTimePrev == 0)
< 		cg.cpuTimePrev = cg.cpuTimeCurr;
< 
< 	cg.cpuFrameTime = cg.cpuTimeCurr - cg.cpuTimePrev;
< 
< 	// ZNUDGE END
< 
827,832d812
< 
< // ZNUDGE BEGIN
< 	// Detect and render player shots before
< 	// they are reported back by the server.
< 	ZN_CheckFireEvent();
< // ZNUDGE END
diff -r code/cgame/cg_weapons.c ../../../Quake-III-Arena-master/code/cgame/cg_weapons.c
210d209
< 
227c226
< 
---
>  
980d978
< 	int beam_hit;
1014,1015c1012
< 	}
< 	else {
---
> 	} else {
1033,1065d1029
< 	beam_hit = trace.fraction < 1.0;
< 
< // ZNUDGE BEGIN
< 	// znudge fixed lightning.
< 	// Lightning just shoots straight ahead of where you are looking.
< 	if ((cent->currentState.number == cg.predictedPlayerState.clientNum) && (zn_lightning.value)) {
< 		vec3_t diff;
< 		float dist;
< 
< 		diff[0] = trace.endpos[0] - muzzlePoint[0];
< 		diff[1] = trace.endpos[1] - muzzlePoint[1];
< 		diff[2] = trace.endpos[2] - muzzlePoint[2];
< 		dist = sqrt(diff[0]*diff[0] + diff[1]*diff[1] + diff[2]*diff[2]);
< 
< 		AngleVectors( cg.predictedPlayerState.viewangles, forward, NULL, NULL );
< 		VectorCopy( cg.predictedPlayerState.origin, muzzlePoint );
< 
< 		// FIXME: crouch
< 		muzzlePoint[2] += DEFAULT_VIEWHEIGHT;
< 
< 		VectorMA( muzzlePoint, 14, forward, muzzlePoint );
< 
< 		// project forward by the strike distance range
< 		VectorMA( muzzlePoint, dist, forward, endPoint );
< 
< 		// see if it hit a wall
< 		CG_Trace( &trace, muzzlePoint, vec3_origin, vec3_origin, endPoint, 
< 			cent->currentState.number, MASK_SHOT );
< 
< 		beam_hit = beam_hit || (trace.fraction < 1.0);
< 	}
< // ZNUDGE END
< 
1078c1042
< 	if ( beam_hit ) {
---
> 	if ( trace.fraction < 1.0 ) {
Only in code/cgame: cg_znudge.c
